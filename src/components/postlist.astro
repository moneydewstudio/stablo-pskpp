---
import { Picture } from "astro:assets";
import { getFormattedDate } from "@/utils/all";
import type { CollectionEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"blog"> | CollectionEntry<"kamuspsikologionline"> | CollectionEntry<"skripsipsikologi"> | CollectionEntry<"teskepribadian">;
  aspect?: "landscape" | "square";
  preloadImage?: boolean;
}

const { post, aspect = "landscape", preloadImage = false } = Astro.props;
const { title, image, publishDate } = post.data;

const getLink = (collection: string, slug: string) => {
  switch (collection) {
    case "kamuspsikologionline":
      return `/kamus-psikologi-online/${slug}/`;
    case "skripsipsikologi":
      return `/skripsi-psikologi/${slug}/`;
    case "teskepribadian":
      return `/tes-kepribadian/${slug}/`;
    default:
      return `/blog/${slug}/`;
  }
};

---

<div class="cursor-pointer group">
  <div
    class={`relative overflow-hidden transition-all bg-gray-100 rounded-md dark:bg-gray-800 hover:scale-105 ${
      aspect === "landscape" ? "aspect-video" : "aspect-square"
    }`}>
    {image && (
      <Picture
        src={image}
        widths={[200, 400, 800]}
        sizes="(max-width: 640px) 90vw, 480px"
        width={800}
        height={450}
        alt={title}
        loading={preloadImage ? "eager" : "lazy"}
        class="w-full h-full object-cover transition-all"
      />
    )}
  </div>
  <h2
    class="mt-2 text-lg font-semibold tracking-normal text-brand-primary dark:text-white">
    <a href={getLink(post.collection, post.slug)}>
      <span
        class="bg-gradient-to-r from-green-200 to-green-100 dark:from-purple-800 dark:to-purple-900 bg-[length:0px_10px] bg-left-bottom bg-no-repeat transition-[background-size] duration-500 hover:bg-[length:100%_3px] group-hover:bg-[length:100%_10px]">
        {title}
      </span>
    </a>
  </h2>
  <div class="hidden">
    {publishDate && (
      <time datetime={publishDate.toISOString()}>
        {getFormattedDate(publishDate)}
      </time>
    )}
  </div>
</div>